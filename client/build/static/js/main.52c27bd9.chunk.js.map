{"version":3,"sources":["pages/welcomepage.js","utils/API.js","component/Modal.js","component/Login.js","pages/loginpage.js","component/Registration.js","pages/register.js","pages/gamepage.js","App.js","serviceWorker.js","index.js"],"names":["Welcomepage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","btnClickHandler","event","console","log","target","value","setState","choosenRoute","renderRedirect","state","react_default","a","createElement","react_router","to","render","id","className","type","onClick","bind","assertThisInitialized","Component","API","getPlayer","loginInfo","axios","post","registerPlayer","playerData","Modal","_ref","handleClose","show","children","showHideClassName","Login","showModal","hideModal","onHandleSubmit","preventDefault","username","password","then","res","data","loggedIn","onHandleChange","defineProperty","name","src_component_Modal","onSubmit","htmlFor","onChange","required","LoginPage","component_Login","Registration","highestscore","numberofgames","lastgamescore","catch","err","Register","component_Registration","Gamepage","App","react_router_dom","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.52c27bd9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './welcomepage.css'\r\n\r\nclass Welcomepage extends Component {\r\n     constructor(props) {\r\n          super(props);\r\n\r\n          this.state = {\r\n               choosenRoute: \"\"\r\n          }\r\n\r\n          this.btnClickHandler = this.btnClickHandler.bind(this);\r\n          this.renderRedirect = this.renderRedirect.bind(this);\r\n     }\r\n\r\n     btnClickHandler = (event) => {\r\n          console.log(event.target.value);\r\n          this.setState({choosenRoute: event.target.value});\r\n     }\r\n\r\n     renderRedirect = () => {\r\n          console.log(\"This is the page to redirect to \" + this.state.choosenRoute);\r\n          if (this.state.choosenRoute) {\r\n               return (<Redirect to={this.state.choosenRoute} />);\r\n          }\r\n     }\r\n\r\n     render = () => {\r\n          return (\r\n               <div>\r\n                    {this.renderRedirect()}\r\n                    <h1 id=\"title\">TR<span id=\"redTitle\">Î›</span>CC<span id=\"redTitle\">V</span>R</h1>\r\n                         <div className=\"container\">\r\n                         <div id=\"splashWrap\">\r\n                              <p id=\"splashTextTitle\">WELCOME</p>\r\n                              <p className=\"splashText red\">TRÎ›CCVR IS A BROWSER BASED</p>\r\n                              <p className=\"splashText red\">MOUSE TRACKING GAME</p>\r\n                              <br />\r\n                              <br />\r\n                              <p className=\"splashText\" >If this is your first time playing, please</p>\r\n                              <p className=\"splashText\">click on the register by clicking the</p>\r\n                              <p className=\"splashText\">register button below.</p>\r\n                              <button type=\"button\" value=\"/register\" onClick={this.btnClickHandler}>REGISTER</button>\r\n                              <br />\r\n                              <br />\r\n                              <p className=\"splashText\">If you have already registered, please</p> \r\n                              <p className=\"splashText\">click the login button below to</p>\r\n                              <p className=\"splashText\">login and start the game.</p>\r\n                              <button type=\"button\" value=\"/login\" onClick={this.btnClickHandler}>LOGIN</button> \r\n                         </div>\r\n                    </div>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default Welcomepage;","import axios from \"axios\";\r\n\r\nexport default {\r\n     // Gets all books\r\n     getPlayer: function (loginInfo) {\r\n          return axios.post(\"/api/getplayer\", loginInfo);\r\n     },\r\n     // // Gets the book with the given id\r\n     // getBook: function (id) {\r\n     //      return axios.get(\"/api/books/\" + id);\r\n     // },\r\n     // // Deletes the book with the given id\r\n     // deleteBook: function (id) {\r\n     //      return axios.delete(\"/api/books/\" + id);\r\n     // },\r\n     // Saves a book to the database\r\n     registerPlayer: function (playerData) {\r\n          return axios.post(\"/api/regplayer\", playerData);\r\n     }\r\n};\r\n","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ handleClose, show, children }) => {\r\n  let showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        {children}\r\n        <button onClick={handleClose}>close</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport API from \"../utils/API\";\r\nimport './LoginReg.css';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"./Modal.js\";\r\n\r\nclass Login extends Component {\r\n     constructor(props) {\r\n          super(props);\r\n\r\n          this.state = {\r\n               username: \"\",\r\n               password: \"\",\r\n               loggedIn: false,\r\n               show: false\r\n          }\r\n\r\n          this.onHandleSubmit = this.onHandleSubmit.bind(this);\r\n          this.onHandleChange = this.onHandleChange.bind(this);\r\n          this.showModal = this.showModal.bind(this);\r\n          this.hideModal = this.hideModal.bind(this);\r\n     }\r\n\r\n     showModal = () => {\r\n          this.setState({ show: true });\r\n     };\r\n\r\n     hideModal = () => {\r\n          this.setState({ show: false });\r\n     };\r\n\r\n     onHandleSubmit = (event) => {\r\n          console.log(\"form being submitted for login\");\r\n          event.preventDefault();\r\n          if (this.state.username && this.state.password) {\r\n               API.getPlayer({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n               })\r\n               .then(res => { \r\n                    console.log(res.data);\r\n                    if (res.data !== null){\r\n                         console.log(\"user logged in\");\r\n                         this.setState({loggedIn: true});\r\n                    } else {\r\n                         console.log(\"user NOT logged in\");\r\n                         this.showModal();\r\n                    }\r\n               });\r\n          }\r\n     }\r\n\r\n     onHandleChange = (event) => {\r\n          console.log(\"handle change\", event);\r\n          this.setState({\r\n               [event.target.name]: event.target.value\r\n          })\r\n     }\r\n\r\n     render = () => {\r\n          if (!this.state.loggedIn){          \r\n               return (                 \r\n                    <div className=\"container\">\r\n                         <Modal show={this.state.show} handleClose={this.hideModal}>\r\n                              <p>The username or password entered is incorrect.</p>\r\n                              <p>Please try again.</p>\r\n                         </Modal>\r\n                         <div className=\"splashWrap\">\r\n                              <p className=\"splashTextTitle\">\r\n                                   Login\r\n                              </p>\r\n                              <p className=\"splashText\">\r\n                                   Please enter your username\r\n                              </p>\r\n                              <p className=\"splashText\">\r\n                                   and password to login.\r\n                              </p>\r\n                              <br />\r\n                              <form onSubmit={this.onHandleSubmit}>\r\n                                   <label htmlFor=\"username\" className=\"red\">Username </label>\r\n                                   <input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onHandleChange}\r\n                                        required\r\n                                   />\r\n                                   <br />\r\n                                   <br />\r\n                                   <label htmlFor=\"username\" className=\"red\">Password </label>\r\n                                   <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onHandleChange}\r\n                                        required\r\n                                   />\r\n                                   <br />\r\n                                   <br />\r\n\r\n                                   <button id=\"regBtn\" type=\"submit\">Login</button>\r\n                              </form>\r\n                         </div>\r\n                    </div>\r\n               )} else {\r\n                    return (<Redirect to=\"/gamepage\" />)\r\n               };\r\n     }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport Login from '../component/Login.js';\r\n\r\nclass LoginPage extends Component {\r\n     render = () => {\r\n          return (\r\n               <div>\r\n                    <Login />\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport API from \"../utils/API\";\r\nimport './LoginReg.css';\r\nimport Modal from './Modal';\r\n\r\nclass Registration extends Component {\r\n     constructor (props) {\r\n          super(props);\r\n\r\n          this.state = {\r\n               username: \"\",\r\n               password: \"\",\r\n               show: false\r\n          }\r\n\r\n          this.onHandleSubmit = this.onHandleSubmit.bind(this);\r\n          this.onHandleChange = this.onHandleChange.bind(this);\r\n          this.showModal = this.showModal.bind(this);\r\n          this.hideModal = this.hideModal.bind(this);\r\n     }\r\n\r\n     showModal = () => {\r\n          this.setState({ show: true });\r\n     };\r\n\r\n     hideModal = () => {\r\n          this.setState({ show: false });\r\n     };\r\n\r\n     onHandleSubmit = (event) => {\r\n          console.log(\"form being submitted\");\r\n          event.preventDefault();\r\n          if (this.state.username && this.state.password) {\r\n               console.log(\"Username and password are present\")\r\n               API.registerPlayer({\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    highestscore: 0,\r\n                    numberofgames: 0,\r\n                    lastgamescore: 0\r\n               })\r\n                    .then(res => {\r\n                         console.log(\"user registered\");\r\n                         console.log(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                         console.log(err);\r\n                         this.showModal();\r\n                    });\r\n          }\r\n     }\r\n     \r\n     onHandleChange = (event) => {\r\n          console.log(\"handle change\", event);\r\n          this.setState ({\r\n               [event.target.name]: event.target.value\r\n          })\r\n     }\r\n\r\n     render = () => {\r\n          return (\r\n               <div className=\"container\">\r\n                    <Modal show={this.state.show} handleClose={this.hideModal}>\r\n                         <p>This user name has already been choosen.</p>\r\n                         <p>Please enter a different user name.</p>\r\n                    </Modal>\r\n                    <div className=\"splashWrap\">\r\n                         <p className=\"splashTextTitle\">\r\n                              Registration\r\n                         </p>\r\n                         <p className=\"splashText\">\r\n                              Please fill out the form\r\n                         </p>\r\n                         <p className=\"splashText\">\r\n                              below to register.\r\n                         </p>\r\n                         <br />\r\n                         <form onSubmit = { this.onHandleSubmit }>\r\n                              <label htmlFor=\"username\" className=\"red\">Username </label>\r\n                              <input \r\n                                   type=\"text\"\r\n                                   name=\"username\"\r\n                                   value={this.state.username}\r\n                                   onChange={this.onHandleChange}\r\n                                   required\r\n                              /> \r\n                              <br />\r\n                              <br />\r\n                              <label htmlFor=\"username\" className=\"red\">Password </label>\r\n                              <input\r\n                                   type=\"password\"\r\n                                   name=\"password\"\r\n                                   value={this.state.password}\r\n                                   onChange={this.onHandleChange}\r\n                                   required\r\n                              /> \r\n                              <br />\r\n                              <br />\r\n\r\n                              <button id=\"regBtn\" type=\"submit\">REGISTER</button>\r\n                         </form>\r\n                    </div>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default Registration;","import React, { Component } from \"react\";\r\nimport Registration from '../component/Registration.js';\r\n\r\nclass Register extends Component {\r\n     render = () => {\r\n          return (\r\n               <div>\r\n                    <Registration />\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport './welcomepage.css'\r\n\r\nclass Gamepage extends Component {\r\n     render = () => {\r\n          return (\r\n               <div className=\"container\">\r\n                    <div id=\"splashWrap\">\r\n                         <p id=\"splashTextTitle\">HOW TO PLAY TRÎ›CCVR</p>\r\n                         <br />\r\n                         <p className=\"splashText yellow\">THE RULES ARE SIMPLE:</p>\r\n                         <p className=\"splashTextRules\"><span className=\"yellow\">1</span>] FOLLOW THE TARGET WITH YOUR MOUSE</p>\r\n                         <p className=\"splashTextRules\"><span className=\"yellow\">2</span>] THAT'S IT</p>\r\n                         <br />\r\n                         <p className=\"splashText\">SOUND SIMPLE?</p>\r\n                         <p className=\"splashText\">TOLD YOU!</p>\r\n                         <br />\r\n                         <p className=\"splashText\">BUT BE CAREFUL... IT GETS <span className=\"red\">HARDER</span></p>\r\n                         <br />\r\n                         <button type=\"button\">PLÎ›Y</button>\r\n                    </div>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default Gamepage;","import React, { Component } from 'react';\nimport './App.css';\nimport Welcomepage from './pages/welcomepage';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './pages/loginpage';\nimport Register from './pages/register';\nimport Gamepage from './pages/gamepage';\n\nclass App extends Component {\n     render = () => {\n          return (\n               <Router>\n                    <Switch> \n                         <Route exact path=\"/\" component = { Welcomepage } />\n                         <Route exact path=\"/welcomepage\" component = { Welcomepage } />\n                         <Route exact path=\"/login\" component = { Login } />\n                         <Route exact path=\"/register\" component = { Register } />\n                         <Route exact path=\"/gamepage\" component = { Gamepage } />\n                    </Switch>\n               </Router>\n          );\n     }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}